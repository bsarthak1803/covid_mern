[{"/Users/sb067477/Documents/covid_mern/client/src/index.js":"1","/Users/sb067477/Documents/covid_mern/client/src/reportWebVitals.js":"2","/Users/sb067477/Documents/covid_mern/client/src/App.js":"3","/Users/sb067477/Documents/covid_mern/client/src/home.js":"4","/Users/sb067477/Documents/covid_mern/client/src/country.js":"5","/Users/sb067477/Documents/covid_mern/client/src/state.js":"6"},{"size":500,"mtime":1609333734297,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1609229221917,"results":"9","hashOfConfig":"8"},{"size":1808,"mtime":1609333850222,"results":"10","hashOfConfig":"8"},{"size":838,"mtime":1609352619835,"results":"11","hashOfConfig":"8"},{"size":3635,"mtime":1609352963136,"results":"12","hashOfConfig":"8"},{"size":3309,"mtime":1609353092740,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1t38ar4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sb067477/Documents/covid_mern/client/src/index.js",[],["28","29"],"/Users/sb067477/Documents/covid_mern/client/src/reportWebVitals.js",[],"/Users/sb067477/Documents/covid_mern/client/src/App.js",["30","31","32"],"import React, {useState, useEffect} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Country from './country';\nimport State from './state';\nimport Home from './home';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst App = () => {\n    const [data, setData] = useState([]);\n    const [states, setStates] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect (() => {\n        //fetch data from API and keep in store\n        const fetchData = async () => {\n            setLoading(true);\n            const response = await fetch(\"http://localhost:5000/\");\n            const result = await response.json();\n            setLoading(false);\n            setData(result.raw_data);\n            var states_array = [...new Set(result.raw_data.map ((row) =>  { return (row.detectedstate); } ) )];\n            setStates(states_array);\n        }\n        fetchData();\n    },[])\n\n    const initialState = {\n        data :  data,\n        states : states,\n        state_name : ''\n    }\n\n    //reducer emits state according to the action\n    function rootReducer (state = initialState, action){\n        return state;\n      }\n\n    //create a store\n    const store = createStore(rootReducer);\n    // const dispatch = useDispatch();\n    // console.log(dispatch());\n\n    return <div>\n        <Provider store={store}>\n        <Router>\n            <Switch>\n                <Route path='/' exact component={Home}></Route>\n                <Route path='/country' component={Country}></Route>\n                <Route path='/state/:state_name/:total_cases' component={State}></Route>\n            </Switch>\n        </Router>\n        </Provider>\n    </div>\n}\n\nexport default App","/Users/sb067477/Documents/covid_mern/client/src/home.js",[],"/Users/sb067477/Documents/covid_mern/client/src/country.js",["33","34"],"/Users/sb067477/Documents/covid_mern/client/src/state.js",["35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":6,"column":10,"nodeType":"43","messageId":"44","endLine":6,"endColumn":21},{"ruleId":"41","severity":1,"message":"45","line":6,"column":23,"nodeType":"43","messageId":"44","endLine":6,"endColumn":34},{"ruleId":"41","severity":1,"message":"46","line":13,"column":12,"nodeType":"43","messageId":"44","endLine":13,"endColumn":19},{"ruleId":"41","severity":1,"message":"42","line":5,"column":12,"nodeType":"43","messageId":"44","endLine":5,"endColumn":23},{"ruleId":"41","severity":1,"message":"47","line":11,"column":21,"nodeType":"43","messageId":"44","endLine":11,"endColumn":31},{"ruleId":"41","severity":1,"message":"42","line":7,"column":10,"nodeType":"43","messageId":"44","endLine":7,"endColumn":21},{"ruleId":"41","severity":1,"message":"48","line":17,"column":19,"nodeType":"43","messageId":"44","endLine":17,"endColumn":25},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'states' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]